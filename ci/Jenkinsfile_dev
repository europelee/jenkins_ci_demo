#!groovy
node('master') {
    currentBuild.result = "SUCCESS"
    try {
        stage ('checkout') {
            checkout scm
        }
        stage ('build') {
            echo "build(compile, code analysis, unit test, pkg)"
            echo "make distribution(like tar.gz rpm etc.)"
            // requires SonarQube Scanner 2.8+
            def scannerHome = tool 'sonar-scanner-3.0.3.778';
            withSonarQubeEnv('sonarqube-5.6.6') {
              sh "${scannerHome}/bin/sonar-scanner -X -Dsonar.projectKey=jenkins_ci_demo -Dsonar.projectName=jenkins_ci_demo -Dsonar.projectVersion=1.0 -Dsonar.sources=."
            }
            //todo: make distribution
            //eg: generate jenkins_ci_demo_1.0.0-alpha.tar.gz
            def workspace = pwd()
            sh "python setup.py sdist"
        }
        
        stage ('deploy') {
            echo "deploy distribution to dev dockers"
            //todo: deploy distribution to qa_xm dockers
            //eg: ssh -t -p 57891 root@1.1.1.1 "(wget ${jenkins_ci_demo_1.0.0-alpha_url}; run jenkins_ci_demo_1.0.0_deploy.sh)"
            //def dl_cmd = "wget --no-check-certificate http://softrepo.qtlcdn.com/third_party/python/setuptools-28.8.0.tar.gz -O /opt/setuptools-28.8.0.tar.gz"
            //def untar_cmd = "tar xvf /opt/setuptools-28.8.0.tar.gz -C /opt"
            //def install_cmd = "(cd /opt/setuptools-28.8.0; python setup.py install)"
            //sh "(${dl_cmd}; ${untar_cmd}; ${install_cmd})"
            def workspace = pwd()
            def verstr = readFile "${workspace}/VERSION"
            def version = verstr.trim()
            echo "${version}" 
            def utils = load "${workspace}/ci/utils.groovy"
            def pkg = 'jenkins_ci_demo-' + version + '.tar.gz'
            echo "${pkg}"
            utils.deploy2dev("${workspace}/dist", pkg) 
        }
    }
    catch (err) {
        currentBuild.result = 'FAILURE'
    }
    finally {
        if (currentBuild.result == 'SUCCESS') {
            mail (to: 'ouzhou.li@quantil.com',
                 subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) was already deployed",
                 body: "a test");
        }
        else {
            mail (to: 'ouzhou.li@quantil.com',
                 subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) fail",
                 body: "a test");
        }
    }
}

